//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASPNetApplicationSample.WebServiceSample {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebServiceSample.WebServiceSampleSoap")]
    public interface WebServiceSampleSoap {
        
        // CODEGEN: Generating message contract since element name AddResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add", ReplyAction="*")]
        ASPNetApplicationSample.WebServiceSample.AddResponse Add(ASPNetApplicationSample.WebServiceSample.AddRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add", ReplyAction="*")]
        System.Threading.Tasks.Task<ASPNetApplicationSample.WebServiceSample.AddResponse> AddAsync(ASPNetApplicationSample.WebServiceSample.AddRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Substraction", ReplyAction="*")]
        int Substraction(int k, int l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Substraction", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SubstractionAsync(int k, int l);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Add", Namespace="http://tempuri.org/", Order=0)]
        public ASPNetApplicationSample.WebServiceSample.AddRequestBody Body;
        
        public AddRequest() {
        }
        
        public AddRequest(ASPNetApplicationSample.WebServiceSample.AddRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int i;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int j;
        
        public AddRequestBody() {
        }
        
        public AddRequestBody(int i, int j) {
            this.i = i;
            this.j = j;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AddResponse", Namespace="http://tempuri.org/", Order=0)]
        public ASPNetApplicationSample.WebServiceSample.AddResponseBody Body;
        
        public AddResponse() {
        }
        
        public AddResponse(ASPNetApplicationSample.WebServiceSample.AddResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class AddResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string AddResult;
        
        public AddResponseBody() {
        }
        
        public AddResponseBody(string AddResult) {
            this.AddResult = AddResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSampleSoapChannel : ASPNetApplicationSample.WebServiceSample.WebServiceSampleSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSampleSoapClient : System.ServiceModel.ClientBase<ASPNetApplicationSample.WebServiceSample.WebServiceSampleSoap>, ASPNetApplicationSample.WebServiceSample.WebServiceSampleSoap {
        
        public WebServiceSampleSoapClient() {
        }
        
        public WebServiceSampleSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSampleSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSampleSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSampleSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ASPNetApplicationSample.WebServiceSample.AddResponse ASPNetApplicationSample.WebServiceSample.WebServiceSampleSoap.Add(ASPNetApplicationSample.WebServiceSample.AddRequest request) {
            return base.Channel.Add(request);
        }
        
        public string Add(int i, int j) {
            ASPNetApplicationSample.WebServiceSample.AddRequest inValue = new ASPNetApplicationSample.WebServiceSample.AddRequest();
            inValue.Body = new ASPNetApplicationSample.WebServiceSample.AddRequestBody();
            inValue.Body.i = i;
            inValue.Body.j = j;
            ASPNetApplicationSample.WebServiceSample.AddResponse retVal = ((ASPNetApplicationSample.WebServiceSample.WebServiceSampleSoap)(this)).Add(inValue);
            return retVal.Body.AddResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ASPNetApplicationSample.WebServiceSample.AddResponse> ASPNetApplicationSample.WebServiceSample.WebServiceSampleSoap.AddAsync(ASPNetApplicationSample.WebServiceSample.AddRequest request) {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<ASPNetApplicationSample.WebServiceSample.AddResponse> AddAsync(int i, int j) {
            ASPNetApplicationSample.WebServiceSample.AddRequest inValue = new ASPNetApplicationSample.WebServiceSample.AddRequest();
            inValue.Body = new ASPNetApplicationSample.WebServiceSample.AddRequestBody();
            inValue.Body.i = i;
            inValue.Body.j = j;
            return ((ASPNetApplicationSample.WebServiceSample.WebServiceSampleSoap)(this)).AddAsync(inValue);
        }
        
        public int Substraction(int k, int l) {
            return base.Channel.Substraction(k, l);
        }
        
        public System.Threading.Tasks.Task<int> SubstractionAsync(int k, int l) {
            return base.Channel.SubstractionAsync(k, l);
        }
    }
}
